/*
 * PapSign API
 * The PapSign API
 *
 * OpenAPI spec version: 0.1
 * Contact: support@papsign.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.MapStringString;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * RequestSignatureDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-07-27T15:04:00.483Z[GMT]")
public class RequestSignatureDTO {
  @SerializedName("identityID")
  private Long identityID = null;

  @SerializedName("keySize")
  private Integer keySize = null;

  @SerializedName("text")
  private String text = null;

  @SerializedName("userData")
  private MapStringString userData = null;

  public RequestSignatureDTO identityID(Long identityID) {
    this.identityID = identityID;
    return this;
  }

   /**
   * Get identityID
   * minimum: 9223372036854775616
   * maximum: -9223372036854775616
   * @return identityID
  **/
  @Schema(required = true, description = "")
  public Long getIdentityID() {
    return identityID;
  }

  public void setIdentityID(Long identityID) {
    this.identityID = identityID;
  }

  public RequestSignatureDTO keySize(Integer keySize) {
    this.keySize = keySize;
    return this;
  }

   /**
   * Get keySize
   * minimum: -2147483648
   * maximum: 2147483647
   * @return keySize
  **/
  @Schema(required = true, description = "")
  public Integer getKeySize() {
    return keySize;
  }

  public void setKeySize(Integer keySize) {
    this.keySize = keySize;
  }

  public RequestSignatureDTO text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @Schema(description = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public RequestSignatureDTO userData(MapStringString userData) {
    this.userData = userData;
    return this;
  }

   /**
   * Get userData
   * @return userData
  **/
  @Schema(required = true, description = "")
  public MapStringString getUserData() {
    return userData;
  }

  public void setUserData(MapStringString userData) {
    this.userData = userData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestSignatureDTO requestSignatureDTO = (RequestSignatureDTO) o;
    return Objects.equals(this.identityID, requestSignatureDTO.identityID) &&
        Objects.equals(this.keySize, requestSignatureDTO.keySize) &&
        Objects.equals(this.text, requestSignatureDTO.text) &&
        Objects.equals(this.userData, requestSignatureDTO.userData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identityID, keySize, text, userData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestSignatureDTO {\n");
    
    sb.append("    identityID: ").append(toIndentedString(identityID)).append("\n");
    sb.append("    keySize: ").append(toIndentedString(keySize)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    userData: ").append(toIndentedString(userData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
