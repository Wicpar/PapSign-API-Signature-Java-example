/*
 * PapSign API
 * The PapSign API
 *
 * OpenAPI spec version: 0.1
 * Contact: support@papsign.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.DecodedSignatureDTO;
import io.swagger.client.model.SignatureSlot;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * PDFSignatureSlotDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-07-27T15:04:00.483Z[GMT]")
public class PDFSignatureSlotDTO {
  @SerializedName("signature")
  private DecodedSignatureDTO signature = null;

  @SerializedName("slot")
  private SignatureSlot slot = null;

  @SerializedName("testValid")
  private Boolean testValid = null;

  @SerializedName("valid")
  private Boolean valid = null;

  public PDFSignatureSlotDTO signature(DecodedSignatureDTO signature) {
    this.signature = signature;
    return this;
  }

   /**
   * Get signature
   * @return signature
  **/
  @Schema(description = "")
  public DecodedSignatureDTO getSignature() {
    return signature;
  }

  public void setSignature(DecodedSignatureDTO signature) {
    this.signature = signature;
  }

  public PDFSignatureSlotDTO slot(SignatureSlot slot) {
    this.slot = slot;
    return this;
  }

   /**
   * Get slot
   * @return slot
  **/
  @Schema(required = true, description = "")
  public SignatureSlot getSlot() {
    return slot;
  }

  public void setSlot(SignatureSlot slot) {
    this.slot = slot;
  }

  public PDFSignatureSlotDTO testValid(Boolean testValid) {
    this.testValid = testValid;
    return this;
  }

   /**
   * Get testValid
   * @return testValid
  **/
  @Schema(required = true, description = "")
  public Boolean isTestValid() {
    return testValid;
  }

  public void setTestValid(Boolean testValid) {
    this.testValid = testValid;
  }

  public PDFSignatureSlotDTO valid(Boolean valid) {
    this.valid = valid;
    return this;
  }

   /**
   * Get valid
   * @return valid
  **/
  @Schema(required = true, description = "")
  public Boolean isValid() {
    return valid;
  }

  public void setValid(Boolean valid) {
    this.valid = valid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PDFSignatureSlotDTO pdFSignatureSlotDTO = (PDFSignatureSlotDTO) o;
    return Objects.equals(this.signature, pdFSignatureSlotDTO.signature) &&
        Objects.equals(this.slot, pdFSignatureSlotDTO.slot) &&
        Objects.equals(this.testValid, pdFSignatureSlotDTO.testValid) &&
        Objects.equals(this.valid, pdFSignatureSlotDTO.valid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(signature, slot, testValid, valid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PDFSignatureSlotDTO {\n");
    
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    slot: ").append(toIndentedString(slot)).append("\n");
    sb.append("    testValid: ").append(toIndentedString(testValid)).append("\n");
    sb.append("    valid: ").append(toIndentedString(valid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
